digraph {
    nodesep=0.5;
    ranksep=0.5;
    graph [compound=true];
    labelloc=b
    subgraph clusteridle {
        label="Available"
        IDLE;
    }    
    subgraph clusterpreparing{
        label="Preparing"
        WAITING_FOR_TAG;
        AUTHORIZING_FOR_START_NC;
        AUTHORIZING_FOR_START_C;
        WAITING_FOR_CABLE;
    };
    STARTING;

    subgraph clustertransaction {
        bgcolor=gray90;
        label="Transaction"
        subgraph clustercharging{
        bgcolor=white;
        label="Charging"
        CHARGING;
        };
        subgraph clustersuspendedevse{
        bgcolor=white;
        label="SuspendedEVSE"
        SUSPENDED_EVSE
        };
        subgraph clustersuspendedev{
        bgcolor=white;
        label="SuspendedEV"
        SUSPENDED_EV
        };
    };

    AUTHORIZING_FOR_STOP;

    subgraph clusterfinishing {
        label="Finishing"
        STOPPING;
        STOPPING_NT [color=gray70, fontcolor=gray70];
        FINISHING;
    }

    IDLE -> AUTHORIZING_FOR_START_NC [label="tag seen (A2)"]
    AUTHORIZING_FOR_START_NC -> WAITING_FOR_CABLE [label="tag authorized", weight=100]
    AUTHORIZING_FOR_START_NC -> AUTHORIZING_FOR_START_C [label="cable plugged in"]
    WAITING_FOR_CABLE -> STARTING [label="cable plugged in"]

    IDLE -> WAITING_FOR_TAG [label="cable\nplugged\nin (A2)"]
    WAITING_FOR_TAG -> AUTHORIZING_FOR_START_C [label="tag seen"]
    AUTHORIZING_FOR_START_C -> STARTING [label="tag authorized"]

    WAITING_FOR_TAG -> FINISHING [label="Tag timeout (B6)", weight=0, color=gray70, fontcolor=gray70]
    WAITING_FOR_CABLE -> IDLE [label="Cable\ntimeout\n(B1)", weight=0, color=gray70, fontcolor=gray70]
    WAITING_FOR_CABLE -> IDLE [label="same tag seen (B1)", weight=0, color=gray70, fontcolor=gray70]
    WAITING_FOR_TAG -> IDLE [label="Cable\nunplugged\n(B1)", weight=0, color=gray70, fontcolor=gray70]

    STARTING -> SUSPENDED_EV [label="starttransaction\ndone (B3,B4,B5)", lhead=clustertransaction, weight=100]

    CHARGING -> STOPPING_NT [label="starttransaction\nnot accepted\nStopTxnOnInvalidId true", ltail=clustertransaction, weight=0, color=gray70, fontcolor=gray70]
    STOPPING_NT -> FINISHING [label="same tag seen", weight=0, color=gray70, fontcolor=gray70]

    //CHARGING -> SUSPENDED_EVSE
    //CHARGING -> SUSPENDED_EV
    //SUSPENDED_EV -> SUSPENDED_EVSE
    //SUSPENDED_EV -> CHARGING
    //SUSPENDED_EVSE -> SUSPENDED_EV
    //SUSPENDED_EVSE -> CHARGING

    SUSPENDED_EV -> AUTHORIZING_FOR_STOP [label="other tag seen", ltail=clustertransaction, weight=100]
    SUSPENDED_EVSE -> STOPPING [label="same tag seen", ltail=clustertransaction]
    AUTHORIZING_FOR_STOP -> STOPPING [label="other tag\nauthorized"]
    STOPPING -> FINISHING [label="stoptransaction\ndone (C6,D6,E6)", weight=100]

    FINISHING -> IDLE [label="cable\nunplugged (F1)"]
    FINISHING -> AUTHORIZING_FOR_START_C [label="tag seen (F2)", weight=0]

    CHARGING -> IDLE [label="cable\nunplugged (C1)", ltail=clustertransaction, weight=0]
}

// A3, A4, A5 are not used as we expect the charge point to have some kind of auth means.

